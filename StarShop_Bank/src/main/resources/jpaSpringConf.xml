<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- With Spring > 3.1 no need persistence.xml for JPA -->
	<bean id="myEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="persistenceUnitName" value="myPersistenceUnit" />
		<property name="packagesToScan" value="fr.afcepf.al24.bank.entites" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
			<!-- 
				validate: validate the schema, makes no changes to the database. 
				update: update the schema. 
				create: creates the schema, destroying previous	data.
				create-drop: drop the schema at the end of the session.
			-->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 
				 <prop key="hibernate.hbm2ddl.auto">create</prop>
				  -->
				  <!-- 
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
	</bean>

<!-- 
	<bean id="em"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="myPersistenceUnit" />
	</bean>
 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- pour la prise en compte de @persistenceContext() , ... par Spring -->
	<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" 
		/> -->
	<!-- bean "myDataSource" in dataSourceForTestSpringConf.xml or dataSourceSpringConf.xml -->
	<!-- <bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="myDataSource" /> </bean> <bean id="txManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager"> <property name="entityManagerFactory" 
		ref="myEmf" /> </bean> -->
	<!-- prend en compte les @Transactional dans le code java -->


</beans>